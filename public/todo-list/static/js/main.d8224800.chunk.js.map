{"version":3,"sources":["../../core/persistant.ts","theme.ts","../../core/api-fetch.ts","components/Header.tsx","../../core/auth.ts","App.tsx","utils/use-book-api.ts","index.tsx"],"names":["key","config","app","value","localStorage","getItem","data","JSON","parse","update","newData","setItem","stringify","persistant","Proxy","get","target","property","receiver","set","deleteProperty","theme","createMuiTheme","palette","primary","main","secondary","apiFetch","method","path","body","fetch","headers","undefined","Header","book","refreshable","onRefresh","useTheme","AppBar","position","Toolbar","IconButton","color","onClick","window","location","reload","Box","marginX","Typography","variant","noWrap","name","flexGrow","flexShrink","marginLeft","Button","endIcon","Cached","disabled","useStyles","makeStyles","App","useState","setBook","status","setStatus","readBook","addTodo","removeTodo","editTodoTitle","editTodoChecked","editTodoPosition","a","makeRequest","title","id","editTodo","checked","request","Error","response","json","useBookApi","then","marginTop","authCodeFromUrl","URLSearchParams","search","authCodeFromLocalStorage","history","replaceState","pathname","href","loginUrl","origin","authenticate","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"6OAAMA,EAAG,mBAAeC,OAAOC,KAEzBC,EAAQC,aAAaC,QAAQL,GAC/BM,EAAmBH,GAASI,KAAKC,MAAML,GAG3C,SAASM,EAAOC,GACdN,aAAaO,QAAQX,EAAKO,KAAKK,UAAUF,IACzCJ,EAAOI,EAJTJ,GAAQG,EAAO,IAOf,IAkBeI,EAlBgB,IAAIC,MAAMR,EAAM,CAC7CS,IAD6C,SACzCC,EAAQC,EAA4BC,GACtC,OAAOZ,EAAKW,IAEdE,IAJ6C,SAIzCH,EAAQC,EAA4Bd,EAAOe,GAK7C,OAJAT,EAAO,eACFH,EADC,eAEHW,EAAWd,MAEP,GAETiB,eAX6C,SAW9BJ,EAAQC,GAAsC,IAAD,EAChBX,EADgB,EACjDW,GAET,OADAR,EAF0D,eACjDQ,GADiD,YAGnD,K,YCZII,EAXDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,c,gDCNL,SAASE,EAASC,EAA2CC,EAAcC,GAChF,OAAOC,MAAM,QAAD,OAASF,GAAQ,CAC3BD,SACAI,QAAS,CACP,YAAanB,EAAW,aACxB,eAAgB,oBAElBiB,KAAMA,EAAOvB,KAAKK,UAAUkB,QAAQG,I,oECIzB,SAASC,EAAT,GAA0D,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,UACpCC,cAEd,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,QAAS,yBCHpC/B,EAAW,kBAClBgC,OAAOC,SAASC,WDGR,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAKC,QAAS,GACZ,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAA/B,cAIDjB,GACC,kBAACe,EAAA,EAAD,CAAYC,QAAQ,YAAYC,QAAM,GACnCjB,EAAKkB,MAGV,kBAACL,EAAA,EAAD,CAAKM,SAAU,IACf,kBAACN,EAAA,EAAD,CAAKM,SAAU,EAAGC,WAAY,EAAGC,WAAY,GAC3C,kBAACC,EAAA,EAAD,CAAQN,QAAQ,WAAWR,MAAM,UAAUe,QAAS,kBAACC,EAAA,EAAD,MAAgBC,UAAWxB,EAAaQ,QAASP,GAArG,sBE1BV,IAAMwB,EAAYC,aAAW,SAACzC,GAAD,MAAmB,MAoBjC0C,MAhBf,WAAgB,IAAD,EACWC,mBAAsB,MADjC,mBACN7B,EADM,KACA8B,EADA,OCNA,WAAuB,IAAD,EACPD,mBAAwB,MADjB,mBAC5BE,EAD4B,KACpBC,EADoB,KAGnC,MAAO,CACLD,SACAE,SALiC,2CAMjCC,QANiC,8CAOjCC,WAPiC,4CAQjCC,cARiC,8CASjCC,gBATiC,8CAUjCC,iBAViC,2FAanC,sBAAAC,EAAA,sEACeC,EAAY,eAAgBhD,EAAS,MAAD,mBADnD,oFAbmC,kEAgBnC,WAAuBiD,EAAepC,GAAtC,SAAAkC,EAAA,sEACeC,EAAY,cAAehD,EAAS,OAAD,sBAAgC,CAAEiD,QAAOpC,cAD3F,oFAhBmC,kEAmBnC,WAA0BqC,GAA1B,SAAAH,EAAA,sEACeC,EAAY,gBAAiBhD,EAAS,SAAD,sBAAkC,CAAEkD,QADxF,oFAnBmC,+BAsBpBC,EAtBoB,oFAsBnC,WAAwBD,EAAYD,EAA2BG,EAA8BvC,GAA7F,SAAAkC,EAAA,sEACeC,EAAY,eAAgBhD,EAAS,MAAD,sBAA+B,CAAEkD,KAAID,QAAOG,UAASvC,cADxG,oFAtBmC,kEA0BnC,WAA6BqC,EAAYD,GAAzC,SAAAF,EAAA,sEACeI,EAASD,EAAID,OAAO3C,OAAWA,GAD9C,oFA1BmC,kEA6BnC,WAA+B4C,EAAYE,GAA3C,SAAAL,EAAA,sEACeI,EAASD,OAAI5C,EAAW8C,OAAS9C,GADhD,oFA7BmC,kEAgCnC,WAAgC4C,EAAYrC,GAA5C,SAAAkC,EAAA,sEACeI,EAASD,OAAI5C,OAAWA,EAAWO,GADlD,oFAhCmC,+BAoCpBmC,EApCoB,gFAoCnC,WAA2BT,EAAgBc,GAA3C,iBAAAN,EAAA,yDACOR,EADP,sBACqB,IAAIe,MAAJ,6BAAgCf,EAAhC,MADrB,cAGEC,EAAUD,GAHZ,kBAK2Bc,EAL3B,cAKUE,EALV,gBAM6BA,EAASC,OANtC,cAMUhD,EANV,OAOIgC,EAAU,MAPd,kBAQWhC,GARX,wCAUIgC,EAAU,MAVd,gEApCmC,uBDQiEiB,GAA5FlB,EAFK,EAELA,OAAQE,EAFH,EAEGA,SAIhB,OANa,EAEaC,QAFb,EAEsBC,WAFtB,EAEkCC,cAFlC,EAEiDC,gBAFjD,EAEkEC,iBAE/DZ,IAGd,oCACE,kBAAC3B,EAAD,CAAQC,KAAMA,EAAMC,aAAc8B,EAAQ7B,UAAW,kBAAM+B,IAAWiB,KAAKpB,MAC3E,kBAACjB,EAAA,EAAD,CAAKsC,UAAW,IACd,6BAAMpB,IAAkB/B,EAAO5B,KAAKK,UAAUuB,EAAM,KAAM,GAAK,iBDpBhE,WACL,IACMoD,EADY,IAAIC,gBAAgB3C,OAAOC,SAAS2C,QACpB1E,IAAI,aAChC2E,EAA2B7E,EAAW,aAExC0E,GACF1E,EAAW,aAAe0E,EAC1B1C,OAAO8C,QAAQC,aAAa,KAAM,GAAI/C,OAAOC,SAAS+C,WAC5CH,IACV7C,OAAOC,SAASgD,KAAhB,UAA0B7F,OAAO8F,SAAjC,gBAAiD9F,OAAOC,IAAxD,gBAAmE2C,OAAOC,SAASkD,QAAnF,OAA4FnD,OAAOC,SAAS+C,WGFhHI,GAEAC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAe/E,MAAOA,GACpB,kBAACgF,EAAA,EAAD,MACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d8224800.chunk.js","sourcesContent":["const key = `app-data/${config.app}`\n\nconst value = localStorage.getItem(key)\nlet data: Persistant = value && JSON.parse(value)\ndata || update({})\n\nfunction update(newData: Persistant): void {\n  localStorage.setItem(key, JSON.stringify(newData))\n  data = newData\n}\n\nconst persistant: Persistant = new Proxy(data, {\n  get(target, property: keyof Persistant, receiver) {\n    return data[property]\n  },\n  set(target, property: keyof Persistant, value, receiver): boolean {\n    update({\n      ...data,\n      [property]: value\n    })\n    return true\n  },\n  deleteProperty(target, property: keyof Persistant): boolean {\n    const { [property]: value, ...newData } = data\n    update(newData)\n    return true\n  }\n}) as any\n\nexport default persistant\n","import { createMuiTheme } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#A049E7'\n    },\n    secondary: {\n      main: '#E96BED'\n    }\n  }\n})\n\nexport default theme\n","import persistant from './persistant'\n\nexport function apiFetch(method: 'GET' | 'POST' | 'DELETE' | 'PUT', path: string, body?: any) {\n  return fetch(`/api/${path}`, {\n    method,\n    headers: {\n      'auth-code': persistant['auth-code']!,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : undefined\n  })\n}\n","import React from 'react'\nimport { Theme, AppBar, Toolbar, Typography, Box, IconButton, Button } from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\nimport { Cached as CachedIcon, ExitToApp as ExitIcon } from '@material-ui/icons'\n\nimport { logout } from '../../../core/auth'\n\ninterface Props {\n  book: Book | null\n  refreshable?: boolean\n  onRefresh(): void\n}\n\nexport default function Header({ book, refreshable, onRefresh }: Props) {\n  const theme = useTheme<Theme>()\n\n  return (\n    <AppBar position=\"absolute\">\n      <Toolbar>\n        <IconButton color=\"inherit\" onClick={() => logout()}>\n          <ExitIcon />\n        </IconButton>\n        <Box marginX={2}>\n          <Typography variant=\"h6\" noWrap>\n            Todo List\n          </Typography>\n        </Box>\n        {book && (\n          <Typography variant=\"subtitle2\" noWrap>\n            {book.name}\n          </Typography>\n        )}\n        <Box flexGrow={1} />\n        <Box flexGrow={0} flexShrink={0} marginLeft={2}>\n          <Button variant=\"outlined\" color=\"inherit\" endIcon={<CachedIcon />} disabled={!refreshable} onClick={onRefresh}>\n            Refresh&nbsp;&nbsp;\n          </Button>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import persistant from './persistant'\n\nexport function authenticate(): void {\n  const urlParams = new URLSearchParams(window.location.search)\n  const authCodeFromUrl = urlParams.get('auth-code')\n  const authCodeFromLocalStorage = persistant['auth-code']\n\n  if (authCodeFromUrl) {\n    persistant['auth-code'] = authCodeFromUrl\n    window.history.replaceState(null, '', window.location.pathname)\n  } else if (!authCodeFromLocalStorage) {\n    window.location.href = `${config.loginUrl}?app=${config.app}&url=${window.location.origin}${window.location.pathname}`\n  }\n}\n\nexport function logout(): void {\n  delete persistant['auth-code']\n  window.location.reload()\n}\n","import React, { useState } from 'react'\nimport { Theme, Typography, Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nimport useBookApi from './utils/use-book-api'\n\nimport Header from './components/Header'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  //...\n}))\n\nfunction App() {\n  const [book, setBook] = useState<Book | null>(null)\n  const { status, readBook, addTodo, removeTodo, editTodoTitle, editTodoChecked, editTodoPosition } = useBookApi()\n\n  const classes = useStyles()\n\n  return (\n    <>\n      <Header book={book} refreshable={!status} onRefresh={() => readBook().then(setBook)} />\n      <Box marginTop={10}>\n        <pre>{status ? status : book ? JSON.stringify(book, null, 4) : 'Nothing!'}</pre>\n      </Box>\n    </>\n  )\n}\n\nexport default App\n","import { useState } from 'react'\n\nimport { apiFetch } from '../../../core/api-fetch'\n\ntype Status = 'reading book' | 'adding todo' | 'removing todo' | 'editing todo'\n\nexport default function useBookApi() {\n  const [status, setStatus] = useState<Status | null>(null)\n\n  return {\n    status,\n    readBook,\n    addTodo,\n    removeTodo,\n    editTodoTitle,\n    editTodoChecked,\n    editTodoPosition\n  }\n\n  async function readBook(): Promise<Book> {\n    return await makeRequest('reading book', apiFetch('GET', `todo-list/book`))\n  }\n  async function addTodo(title: string, position?: number): Promise<Book> {\n    return await makeRequest('adding todo', apiFetch('POST', `todo-list/book/todo`, { title, position }))\n  }\n  async function removeTodo(id: number): Promise<Book> {\n    return await makeRequest('removing todo', apiFetch('DELETE', `todo-list/book/todo`, { id }))\n  }\n  async function editTodo(id: number, title: string | undefined, checked: boolean | undefined, position: number | undefined): Promise<Book> {\n    return await makeRequest('editing todo', apiFetch('PUT', `todo-list/book/todo`, { id, title, checked, position }))\n  }\n\n  async function editTodoTitle(id: number, title: string) {\n    return await editTodo(id, title, undefined, undefined)\n  }\n  async function editTodoChecked(id: number, checked: boolean) {\n    return await editTodo(id, undefined, checked, undefined)\n  }\n  async function editTodoPosition(id: number, position: number) {\n    return await editTodo(id, undefined, undefined, position)\n  }\n\n  async function makeRequest(status: Status, request: Promise<Response>): Promise<Book> {\n    if (!status) throw new Error(`Not possible while ${status}.`)\n\n    setStatus(status)\n    try {\n      const response = await request\n      const book: Book = await response.json()\n      setStatus(null)\n      return book\n    } catch (reason) {\n      setStatus(null)\n      throw reason\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CssBaseline, ThemeProvider } from '@material-ui/core'\n\nimport { authenticate } from '../../core/auth'\nimport theme from './theme'\nimport App from './App'\n// import * as serviceWorker from './serviceWorker';\n\nauthenticate()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}